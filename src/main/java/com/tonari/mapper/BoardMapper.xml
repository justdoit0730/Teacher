<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tonari.mapper.BoardMapper">
	<select id ="addr_search" resultType ="String">
		select dong from member where nick = #{nick}
	</select>
	<select id="shortarea" resultType="com.tonari.domain.Addr_searchVO">
		select * from addr_search where rank1= #{keyword}
	</select>
	<sql id="searchall">
		(select * from teacher_search_view where teacher_bno like '%' ||
		#{keyword}||'%')
		union 
		(select * from teacher_search_view where title like '%' || #{keyword}||'%')
		union 
		(select * from teacher_search_view where gu like '%' || #{keyword}||'%')
		union 
		(select * from teacher_search_view where dong like '%' || #{keyword}||'%')
		union 
		(select * from teacher_search_view where category_name like '%' || #{keyword}||'%')
		union 
		(select * from teacher_search_view where coment like '%' || #{keyword}||'%')
		union
		(select * from teacher_search_view where nick like '%' || #{keyword}||'%')
	</sql>

	<!-- 사이드 메뉴바 -->
	<select id="sidelist" resultType="com.tonari.domain.CategoryVO">
		select * from category order by category_bno
	</select>
	<!-- 사이드 메뉴바 -->
	<!-- 선생님 정보 -->
	<select id="teacherinfo"
		resultType="com.tonari.domain.Teacherinfo_viewVO">
		select * from teacher_info_view where teacher_bno = #{teacher_bno}
	</select>
	<select id="review" resultType="com.tonari.domain.Review_viewVO">
		select * from review_view where teacher_bno = #{teacher_bno}
	</select>

	<insert id="writeReview"
		parameterType="com.tonari.domain.ReviewVO">
		<selectKey keyProperty="bno" order="BEFORE" resultType="int">
			select review_seq.nextval from dual
		</selectKey>
		insert into review
		(bno,member_bno,teacher_bno,content,score) values
		(#{bno},#{member_bno},#{teacher_bno},#{content},#{score})
	</insert>

	<select id="getnickname" resultType="String" parameterType="int">
		select nick from member where bno = #{bno}
	</select>

	<!-- 페이징 및 search 데이터 가져오기 -->
	<sql id="criteria">
		<choose>
			<when test="type == 'orderby'.toString()">
				title like '%' || #{keyword}||'%'
			</when>
		</choose>
	</sql>

	<select id="total" resultType="int"
		parameterType="com.tonari.util.Criteria">
		select count(*) from
		<choose>
			<when test="type == 'category'.toString()">
				(select * from teacher_search_view where category_bno = #{keyword})
			</when>
			<when test="type == 'all'.toString()">
				(select * from (
				<include refid="searchall" />
				))
			</when>
			<otherwise>
				teacher_search_view
			</otherwise>
		</choose>
		where teacher_bno > 0
	</select>

	<select id="OrderbyList"
		resultType="com.tonari.domain.TeacherSearch_viewVO"
		parameterType="com.tonari.util.Criteria">
		<choose>
			<when test="type == 'orderby'.toString()">
				select
				rn ,
				teacher_bno,member_bno,title,gu,dong,image,category_bno,category_name,score,coment,nick
				from
				(select
				rownum rn ,
				teacher_bno,member_bno,title,gu,dong,image,category_bno,category_name,score,coment,nick
				from
				(select * from teacher_search_view order by
				<choose>
					<when test="keyword == 'score'.toString()">
						score desc nulls last
					</when>
					<otherwise>
						teacher_bno desc
					</otherwise>
				</choose>
				)
				<![CDATA[
					where rownum <= #{pageNum} * #{amount}
					)
				where rn>(#{pageNum}-1) * #{amount}
				]]>
			</when>
			<when test="type == 'area'.toString()">
				select
				rn ,
				teacher_bno,member_bno,title,gu,dong,image,category_bno,category_name,score,coment,nick
				from
				(select
				rownum rn ,
				teacher_bno,member_bno,title,gu,dong,image,category_bno,category_name,score,coment,nick
				from
				(select * from teacher_search_view order by
				(case when dong = #{rank1} then 1 when dong = #{rank2} then 2 when dong =
				#{rank3} then 3 else 4 end)
				)
				<![CDATA[
					where rownum <= #{pageNum} * #{amount}
					)
				where rn>(#{pageNum}-1) * #{amount}
				]]>
			</when>
			<when test="type == 'category'.toString()">
				<![CDATA[
				select 
					rn , teacher_bno,member_bno,title,gu,dong,image,category_bno,category_name,score,coment,nick
				from
					(select 
						rownum rn , teacher_bno,member_bno,title,gu,dong,image,category_bno,category_name,score,coment,nick
					from
						(select * from teacher_search_view where category_bno = #{keyword})
					where rownum <= #{pageNum} * #{amount}
					)
				where rn>(#{pageNum}-1) * #{amount}
				]]>
			</when>
			<otherwise>

				select
				rn ,
				teacher_bno,member_bno,title,gu,dong,image,category_bno,category_name,score,coment,nick
				from
				(select
				rownum rn ,
				teacher_bno,member_bno,title,gu,dong,image,category_bno,category_name,score,coment,nick
				from
				(
				<include refid="searchall" />
				)
				<![CDATA[
					where rownum <= #{pageNum} * #{amount}
					)
				where rn>(#{pageNum}-1) * #{amount}
				]]>
			</otherwise>
		</choose>
	</select>

	<insert id="addlike"
		parameterType="com.tonari.domain.LikeMarkVO">
		<selectKey keyProperty="bno" order="BEFORE" resultType="int">
			select likemark_seq.nextval from dual
		</selectKey>
		insert into likemark (bno,member_bno,teacher_bno) values
		(#{bno},#{member_bno},#{teacher_bno})
	</insert>
	<select id="chkLikeone"
		resultType="com.tonari.domain.LikeMarkVO"
		parameterType="com.tonari.domain.LikeMarkVO">
		select * from likemark where member_bno=#{member_bno}
		and teacher_bno = #{teacher_bno}
	</select>
	<delete id="removelike"
		parameterType="com.tonari.domain.LikeMarkVO">
		delete from likemark where member_bno=#{member_bno} 
		and teacher_bno = ${teacher_bno}
	</delete>
	<select id ="chklike" resultType="com.tonari.domain.LikeMarkVO" parameterType="com.tonari.domain.LikeMarkVO">
		select member_bno,teacher_bno from likemark where member_bno = #{member_bno}
	</select>
	<select id="mainsearch" resultType="com.tonari.domain.TeacherSearch_viewVO" parameterType="com.tonari.util.Criteria">
		select rn,teacher_bno,member_bno,title,gu,dong,image,category_bno,category_name,score,coment,nick
		from(
		    select rownum rn,teacher_bno,member_bno,title,gu,dong,image,category_bno,category_name,score,coment,nick
		    from(
		        select * 
		        from(
		            <include refid="searchall" />
		        )
		        <choose>
					<when test="category_bno != null and dong != ''">
						 where category_bno=#{category_bno} and dong = #{dong}
					</when>
					<when test="category_bno == null and dong != ''">
						 where dong = #{dong}
					</when>
					<when test="category_bno != null and dong == ''">
						 where category_bno=#{category_bno}
					</when>
				</choose>
				
		   <![CDATA[
				)where rownum <= #{pageNum} * #{amount}
			)where rn>(#{pageNum}-1) * #{amount}
			]]>
	</select>
	<select id="viewboard" resultType="com.tonari.domain.BoardVO">
		select * from board where bno = #{bno}
	</select>
	<select id="listboard" resultType="com.tonari.domain.BoardVO">
		select * from board where category = #{category}
	</select>
</mapper>